@model Moo.Entities.ViewModels.Game.GameViewModel
@{
    ViewBag.Title = "Play";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container game-container">
@using (Html.BeginForm(Model.PostFormToAction, "Game", FormMethod.Post))
{
    var labelAttributes = new { @class = "control-label" };
    string buttonValue;
    object guessClass;
    object bullsAndCowsClass;
    switch (Model.PostFormToAction)
    {
        case Moo.Controllers.GameController.USER_GUESS:
            buttonValue = "Guess";
            bullsAndCowsClass = "readonly";
            guessClass = "";
            break;
        case Moo.Controllers.GameController.USER_RESPONSE:
            buttonValue = "End round";
            bullsAndCowsClass = "";
            guessClass = "readonly";
            break;
        default:  // "OpponentGuess"
            buttonValue = "Opponent turn";
            bullsAndCowsClass = "readonly";
            guessClass = "readonly";
            break;
    }
    <h2>Play</h2>
    <header class="row">
        <div class="col-md-3 col-md-offset-2">
            <div class="number-container">
                <div>Your best guess:</div>
                <div id="user-total-guess-container">
                    <input name="OpponentNumberSlots" value="@Model.OpponentNumberSlots[0]" class="form-control" />
                    <input name="OpponentNumberSlots" value="@Model.OpponentNumberSlots[1]" class="form-control" />
                    <input name="OpponentNumberSlots" value="@Model.OpponentNumberSlots[2]" class="form-control" />
                    <input name="OpponentNumberSlots" value="@Model.OpponentNumberSlots[3]" class="form-control" />
                </div>
            </div>
        </div>
        <div class="col-md-3 col-md-offset-2">
            <div class="number-container">
                <div>@Html.DisplayNameFor(model => model.UserNumber)</div>
                <div>@Model.UserNumber</div>
            </div>
        </div>
    </header>
    <main class="row">
        <div class="col-md-3">
            <div class="turns">
                <div class="turns-heading">Your turns</div>
                @if (Model.UserTurns.Count() == 0)
                {
                <div>No previous turns.</div>
                }
                else
                {
                    foreach (var turn in Model.UserTurns.OrderByDescending(t => t.Index))
                    {
                <div class="turn-container">
                    <div class="turn-head">
                        <span class="turn-index">@turn.Index</span>
                    </div>
                    <div class="turn-body">
                        <ul>
                            <li>Guess: <span>@turn.Guess</span></li>
                            <li>Bulls: <span>@turn.Bulls</span></li>
                            <li>Cows: <span>@turn.Cows</span></li>
                        </ul>
                    </div>
                </div>
                    }
                }
            </div>
        </div>
        <div class="main col-md-6">
        @if (false)
        {
            <h3>Game loaded</h3>
            <input type="submit" class="btn btn-success" value="Resume" />
        }
        else
        {
            <h3>Turn @Model.Rounds</h3>
            <div class="form-group">
                @Html.LabelFor(model => model.Guess, labelAttributes);
                <input type="number" id="Guess" name="Guess" class="form-control" @guessClass value="@Model.Guess" />
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Bulls, labelAttributes)
                <input type="number" id="Bulls" name="Bulls" class="form-control" @bullsAndCowsClass value="@Model.Bulls" />
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Cows, labelAttributes)
                <input type="number" id="Cows" name="Cows" class="form-control" @bullsAndCowsClass value="@Model.Cows" />
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-primary form-control" value="@buttonValue" />
            </div>
            }
        </div>
        <div class="col-md-3">
            <div class="turns-heading">
                Opponent turns
            </div>
            @if (Model.OpponentTurns.Count() == 0)
            {
            <div>No previous turns.</div>
            }
            else
            {
                foreach (var turn in Model.OpponentTurns.OrderByDescending(t => t.Index))
                {
            <div class="turn-container">
                <div class="turn-head">
                    <span class="turn-index">@turn.Index</span>
                </div>
                <div class="turn-body">
                    <ul>
                        <li>Guess: <span>@turn.Guess</span></li>
                        <li>Bulls: <span>@turn.Bulls</span></li>
                        <li>Cows: <span>@turn.Cows</span></li>
                    </ul>
                </div>
            </div>
                }
            }
        </div>
    </main>
}
</div>